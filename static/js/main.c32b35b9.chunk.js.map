{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quote","setQuote","author","setAuthor","updateQuote","setUpdateQuote","bgColor","setBgColor","useEffect","fetch","then","response","json","data","quoteText","quoteAuthor","randomColor","luminosity","className","style","backgroundColor","id","color","href","class","onClick","console","log","ReactDOM","render","document","getElementById"],"mappings":"kOA8CeA,EA3CH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAEPG,EAFO,KAECC,EAFD,OAGwBJ,oBAAS,GAHjC,mBAGPK,EAHO,KAGMC,EAHN,OAIgBN,mBAAS,IAJzB,mBAIPO,EAJO,KAIEC,EAJF,KAMdC,qBAAU,WACNC,MAAM,2DACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFZ,EAASY,EAAKb,MAAMc,WACpBX,EAAUU,EAAKb,MAAMe,aACrBR,EAAWS,IAAY,CAAEC,WAAY,eAE9C,CAACb,IAOJ,OACI,yBAAKc,UAAU,YAAYC,MAAO,CAACC,gBAAiBd,IAChD,yBAAKe,GAAG,aACJ,yBAAKH,UAAU,iBAAiBC,MAAO,CAACG,MAAOhB,IAC3C,uBAAGY,UAAU,sBACb,uBAAGG,GAAG,QAAQrB,GACd,uBAAGkB,UAAU,wBAEjB,yBAAKA,UAAU,mBAAmBC,MAAO,CAACG,MAAOhB,IAC7C,uBAAGe,GAAG,UAAN,KAAkBnB,IAEtB,yBAAKgB,UAAU,qBACX,uBAAGG,GAAG,cAAcE,KAAI,iDAA4CvB,EAA5C,mBAA4DE,IAChF,uBAAGsB,MAAM,wBAAwBL,MAAO,CAACG,MAAOhB,MAEpD,4BAAQe,GAAG,YAAYI,QApBnB,WAChBpB,GAAgBD,GAChBsB,QAAQC,IAAIX,QAkB6CG,MAAO,CAACC,gBAAiBd,IAAtE,iBClCpBsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c32b35b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport randomColor from 'randomcolor'\r\n\r\nconst App = () => {\r\n    const [quote, setQuote] = useState('') \r\n    const [author, setAuthor] = useState('')\r\n    const [updateQuote, setUpdateQuote] = useState(true)\r\n    const [bgColor, setBgColor] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('https://quote-garden.herokuapp.com/api/v2/quotes/random')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setQuote(data.quote.quoteText)\r\n                setAuthor(data.quote.quoteAuthor)\r\n                setBgColor(randomColor({ luminosity: 'dark' }))\r\n            })\r\n    }, [updateQuote])\r\n\r\n    const handleClick = () => {\r\n        setUpdateQuote(!updateQuote)\r\n        console.log(randomColor())\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{backgroundColor: bgColor}}>\r\n            <div id=\"quote-box\">\r\n                <div className=\"text-container\" style={{color: bgColor}}>\r\n                    <i className=\"fas fa-quote-left\"></i>\r\n                    <p id=\"text\">{quote}</p>\r\n                    <i className=\"fas fa-quote-right\"></i>\r\n                </div>\r\n                <div className=\"author-container\" style={{color: bgColor}}>\r\n                    <p id=\"author\">- {author}</p>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    <a id=\"tweet-quote\" href={`https://twitter.com/intent/tweet?text=\"${quote}\"%0D-%20${author}`}>\r\n                        <i class=\"fab fa-twitter-square\" style={{color: bgColor}}></i>\r\n                    </a>\r\n                    <button id=\"new-quote\" onClick={handleClick} style={{backgroundColor: bgColor}}>New quote</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}